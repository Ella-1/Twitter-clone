// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyBKp-L4eA_4QGTYZGj7x4LvCwDepQ6sxeU",
  authDomain: "twitter-clone-83bee.firebaseapp.com",
  projectId: "twitter-clone-83bee",
  storageBucket: "twitter-clone-83bee.appspot.com",
  messagingSenderId: "389364060544",
  appId: "1:389364060544:web:f1f7467fd21db98407b165"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {

    // This rule allows anyone with your Storage bucket reference to view, edit,
    // and delete all data in your Storage bucket. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Storage bucket will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Storage bucket will be denied until you Update
    // your rules
    match /{allPaths=**} {
      allow read, write: if request.time < timestamp.date(2023, 11, 7);
    }
  }
}
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

contract SimpleStorage {
    // Boolean
    bool Foodie = true;
    //uint
    uint256 public age= 12; // we can specify how many bit we want to allocate
    // integer
    int phoneNumber = 20;
    // string
    string fullName = "Bata zoaka";
    // address
    address myAddress = 0xaBC95C1fe965b6308feA9B8a1df12DbA63f0EEA0;
    // byte representing how many byte we want them to be
    bytes32 favoritePet = "cat";

    function ageStore(uint256 _age) public {
            age=_age;
            // age =age +1;
    }

    function retrieve() public view returns(bool){
        return Foodie;
    }

    // STRUCTS IN SOLIDITY
    struct People {
        uint256 phoneNumber;
        string name;
    }

    // creating New People
    People public person = People({phoneNumber: 34,name: "bata"});
    People public person2 = People({phoneNumber:45, name: "Emma"});

}